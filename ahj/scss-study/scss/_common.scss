@use 'sass:meta';
@use 'sass:map';
@use 'sass:math';

$font-family: 'Noto Sans KR', -apple-system, Roboto;
$padding: 2rem;
$main-color: #00caca;
:root {
  --font-family: #{meta.inspect($font-family)};
  --main-color: #{$main-color};
  --base-padding: #{$padding};
  --outer-padding: -#{$padding};

  --switch-width: 3.5rem;
  --switch-height: 2rem;
  --switch-padding: 0.3rem;
}
html {
  font-size: 62.5%;
}
body {
  font-size: 1.4rem;
  font-family: var(--font-family);
}

.wrap {
  padding: var(--base-padding);
}
.list {
  margin: {
    bottom: 10px;
    //top: 2px;
  }
  padding: 1rem 0;
  background: red;
  @include outer(true);
  li {
    float: left;
    padding: 1rem;
    list-style: none;
    border: 1px solid #000;
    background: #fff;
  }
  &:after {
    @include clearfix;
  }
}

$button-colors: (
  'success': #28a745,
  'info': #17a2b8,
  'warning': #ffc107
);

.button {
  // &:not(.not) {
  background: none;
  border: 0 none;
  display: inline-block;
  text-align: center;
  color: #111;
  padding: 1rem 2rem;
  font-size: 1.6rem;
  font-weight: 500;
  border-radius: 0.5rem;
  cursor: pointer;
  // }
  &.primary {
    background-color: var(--main-color);
    color: #fff;
    &:active {
      background-color: rgba($main-color, 0.8);
    }
    // &:focus {
    //   // background-color: darken($main-color, 10%);
    //   background-color: lighten($main-color, 10%);
    // }
  }
  .btn-wrap & {
    border: 1px solid #000;
  }

  // &.warning {
  //   background-color: map.get($button-colors, 'warning');
  // }
  @each $color-name, $color-value in $button-colors {
    &.#{$color-name} {
      background-color: $color-value;
      @if ($color-name != 'warning') {
        color: #fff;
      }
      &:active {
        background-color: rgba($color-value, 0.8);
      }
    }
  }
}
.btn-wrap {
  --main-color: red;
}
// .btn-wrap {
//   .button {
//     border: 1px solid #000;
//   }
// }
@include define-emoji('women-holding-hands', 'ðŸ‘­');

.tit-h {
  &1 {
    font-size: 2.4rem;
  }
  &2 {
    font-size: 2rem;
  }
  &3 {
    font-size: 1.8rem;
  }
  &4 {
    font-size: 1.6rem;
  }
}

.item-box {
  .item {
    border: 1px solid #000;
    color: #fff;
    @include unify-parent('div') {
      background: blue;
    }
    @include unify-parent('p') {
      background: green;
    }
  }
}

%btn {
  background: none;
  border: 0 none;
  display: inline-block;
  text-align: center;
  color: #fff;
  padding: 1rem 2rem;
  font-size: 1.6rem;
  font-weight: 500;
  border-radius: 0.5rem;
  cursor: pointer;
  &:active {
    opacity: 0.8;
  }
}
.btn-primary {
  @extend %btn;
  background-color: var(--main-color);
}
.btn-secondary {
  @extend %btn;
  background-color: #111;
}

/*
.primary-btn2 {
  @extend .button;
  background-color: var(--main-color);
  color: #fff;
}

.secondary-btn2 {
  @extend .button;
  background-color: #111;
  color: #fff;
}
*/

.img-box {
  position: relative;
  width: 200px;
  // overflow: hidden;
  &:before {
    content: '';
    display: block;
    padding-top: math.div(133, 200) * 100%;
    // padding-top: 100%;
    background: #ddd;
  }
  img {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
}
:is(ul, ol) {
  + :is(ul, ol) {
    margin-top: 2rem;
  }
}
ul,
ol {
  + ul,
  + ol {
    margin-top: 3rem;
  }
}
